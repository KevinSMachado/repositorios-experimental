/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/jsonfile@6.1.0/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
let _fs;try{_fs=require("graceful-fs")}catch(e){_fs=require("fs")}const universalify=require("universalify"),{stringify:stringify,stripBom:stripBom}=require("./utils");async function _readFile(e,i={}){"string"==typeof i&&(i={encoding:i});const r=i.fs||_fs,s=!("throws"in i)||i.throws;let t,n=await universalify.fromCallback(r.readFile)(e,i);n=stripBom(n);try{t=JSON.parse(n,i?i.reviver:null)}catch(i){if(s)throw i.message=`${e}: ${i.message}`,i;return null}return t}const readFile=universalify.fromPromise(_readFile);function readFileSync(e,i={}){"string"==typeof i&&(i={encoding:i});const r=i.fs||_fs,s=!("throws"in i)||i.throws;try{let s=r.readFileSync(e,i);return s=stripBom(s),JSON.parse(s,i.reviver)}catch(i){if(s)throw i.message=`${e}: ${i.message}`,i;return null}}async function _writeFile(e,i,r={}){const s=r.fs||_fs,t=stringify(i,r);await universalify.fromCallback(s.writeFile)(e,t,r)}const writeFile=universalify.fromPromise(_writeFile);function writeFileSync(e,i,r={}){const s=r.fs||_fs,t=stringify(i,r);return s.writeFileSync(e,t,r)}const jsonfile={readFile:readFile,readFileSync:readFileSync,writeFile:writeFile,writeFileSync:writeFileSync};module.exports=jsonfile;
//# sourceMappingURL=/sm/ca118cb0a5f237949e6a6f72809ff822566b0bf352efffe40767c357515b9902.map